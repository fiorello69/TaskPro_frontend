{"version":3,"file":"static/js/337.735e75a9.chunk.js","mappings":"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","sources":["components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/Filter/Filter.styled.js","components/Modals/FiltersModal/FiltersModal.styled.js","components/Modals/FiltersModal/FiltersModal.js","components/ScreensPage/Filter/Filter.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.js","components/Boards/ColumnTask/ColumnTask.js","components/ScreensPage/MainDashboard/MainDashboard.styled.js","components/Modals/ColumnModal/ColumnModal.styled.js","components/Modals/ColumnModal/AddColumnModal/AddColumnModal.js","components/ScreensPage/MainDashboard/MainDashboard.js","components/ScreensPage/ScreensPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.isOpen ? '225px' : '0')};\n  opacity: ${props => (props.isOpen ? '0.6' : '1')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  outline: none;\n`;\n\nexport const Text = styled.span`\n  font-family: Poppins;\n  color: ${props => props.theme.themePopup.textMain};\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${props => props.theme.themePopup.icon};\n  transition: all 250ms linear;\n  fill: transparent;\n\n  ${props => props.isOpen && 'transform: rotate(-180deg)'};\n`;\n","import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 14px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:first-of-type {\n    padding-top: 14px;\n    padding-bottom: 14px;\n    border-top: 1px solid ${props => props.theme.modal.line};\n    border-bottom: 1px solid ${props => props.theme.modal.line};\n  }\n\n  &:last-of-type {\n    position: relative;\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-bottom: 14px;\n`;\n\nexport const BgWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 252px;\n  gap: 4px;\n`;\n\nexport const BgItem = styled.div`\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.iconDefault};\n  background-position: center;\n  background-size: contain;\n\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const CustomRadioBtn = styled.div`\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n\n  background-image: url(${props => props.url});\n  background-position: center;\n  background-size: cover;\n\n  cursor: pointer;\n  background-color: ${props => props.theme.modal.backgroundSecondary};\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const DefaultRadioBtn = styled(Field)`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ShowAllLabel = styled.p`\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  cursor: pointer;\n\n  position: absolute;\n  top: 2px;\n  right: 0;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 16px;\n  height: 14px;\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  &.active {\n    border: ${props =>\n      props.value === 'without' && '2px solid rgb(128, 128, 128)'};\n    border: ${props =>\n      props.value === 'low' && '2px solid rgba(143, 161, 208, 1)'};\n    border: ${props =>\n      props.value === 'medium' && '2px solid rgba(224, 156, 181, 1)'};\n    border: ${props =>\n      props.value === 'high' && '2px solid rgba(190, 219, 176, 1)'};\n  }\n`;\n\nexport const LabelItem = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background-color: ${props =>\n    props.value === 'without' && 'rgb(128, 128, 128)'};\n  background-color: ${props =>\n    props.value === 'low' && 'rgba(143, 161, 208, 1)'};\n  background-color: ${props =>\n    props.value === 'medium' && 'rgba(224, 156, 181, 1)'};\n  background-color: ${props =>\n    props.value === 'high' && 'rgba(190, 219, 176, 1)'};\n\n  transition: all 250ms linear;\n\n  &.active {\n    width: 6px;\n    height: 6px;\n  }\n`;\n\nexport const LabetlText = styled.p`\n  display: block;\n  width: 100%;\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n\n  &.active {\n    color: ${props => props.theme.modal.textMain};\n  }\n\n  cursor: pointer;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useState } from 'react';\nimport {\n  SectionTitle,\n  FormWrapper,\n  Section,\n  DefaultRadioBtn,\n  FormTitle,\n  RadioBtnWrapper,\n  Label,\n  LabelItem,\n  BgItem,\n  CustomRadioBtn,\n  BgWrapper,\n  ShowAllLabel,\n  LabetlText,\n  Wrapper,\n  ModalForm,\n} from './FiltersModal.styled';\n\nimport data from '../background.json';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { selectPriority } from '../../../redux/dashboards/dashboardsSlice';\nimport { editDashbord } from '../../../redux/dashboards/dashboardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentDashboard } from '../../../redux/dashboards/dashboardsSelectors';\n\nconst options = ['without', 'low', 'medium', 'high'];\n\nconst FiltersModal = () => {\n  const dispatch = useDispatch();\n\n  const currentDashboard = useSelector(selectCurrentDashboard);\n\n  const [selectedBg, setSelectedBg] = useState('');\n  const [selectedLabel, setSelectedLabel] = useState('');\n\n  const initialValues = {\n    bg: selectedBg,\n    label: selectedLabel,\n  };\n\n  const handleLabelSelection = el => {\n    setSelectedLabel(el);\n  };\n\n  const changeBgUrl = el => {\n    const updatedData = { backgroundURL: el };\n    dispatch(\n      editDashbord({\n        dashboardId: currentDashboard._id,\n        updatedData,\n      })\n    );\n  };\n\n  const handleBgSelection = el => {\n    setSelectedBg(el);\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Filters</SectionTitle>\n\n      <Formik initialValues={initialValues}>\n        <ModalForm>\n          <FormWrapper>\n            <FormTitle>Backgraunds </FormTitle>\n\n            <BgWrapper>\n              {data.map((el, idx) => (\n                <div key={idx}>\n                  <BgItem\n                    onClick={() => handleBgSelection(el.url)}\n                    onMouseDown={() => changeBgUrl(el.url)}\n                    className={selectedBg === el.url ? 'active' : ''}\n                  >\n                    {el.url !== '' && (\n                      <CustomRadioBtn\n                        url={el.url}\n                        onClick={() => handleBgSelection(el.url)}\n                        className={selectedBg === el.url ? 'active' : ''}\n                      />\n                    )}\n                  </BgItem>\n\n                  <DefaultRadioBtn type=\"radio\" value={el.url} name=\"bg\" />\n                </div>\n              ))}\n            </BgWrapper>\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Label color</FormTitle>\n\n            <ShowAllLabel onClick={() => dispatch(selectPriority('show all'))}>\n              Show all\n            </ShowAllLabel>\n\n            <RadioBtnWrapper>\n              {options.map((el, idx) => (\n                <Wrapper\n                  key={idx}\n                  onClick={() => {\n                    handleLabelSelection(el);\n                    dispatch(selectPriority(el));\n                  }}\n                >\n                  <Label\n                    value={el}\n                    className={selectedLabel === el ? 'active' : ''}\n                  >\n                    <LabelItem\n                      value={el}\n                      className={selectedLabel === el ? 'active' : ''}\n                    />\n                    <DefaultRadioBtn type=\"radio\" value={el} name=\"label\" />\n                  </Label>\n\n                  <LabetlText className={selectedLabel === el ? 'active' : ''}>\n                    {el === 'without'\n                      ? `${el[0].toUpperCase() + el.slice(1)} priority`\n                      : el[0].toUpperCase() + el.slice(1)}\n                  </LabetlText>\n                </Wrapper>\n              ))}\n            </RadioBtnWrapper>\n          </FormWrapper>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default FiltersModal;\n","import { Icon, Text, Wrapper } from './Filter.styled';\nimport sprite from '../../../images/sprite.svg';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal.js';\nimport { useState } from 'react';\nimport FiltersModal from 'components/Modals/FiltersModal/FiltersModal.js';\n\nconst Filter = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Wrapper onClick={handleOpen}>\n        <Icon>\n          <use href={sprite + '#icon-filter'} />\n        </Icon>\n\n        <Text>Filters</Text>\n      </Wrapper>\n      <BasicModal\n        name=\"Filters\"\n        open={open}\n        closeModal={handleClose}\n        children={<FiltersModal closeModal={handleClose} />}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.header.userName};\n  font-size: 20px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import Filter from '../Filter/Filter.js';\nimport { Header, Title } from './HeaderDashboard.styled';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <Header>\n      <Title>{children}</Title>\n\n      <Filter />\n    </Header>\n  );\n};\n\nexport default HeaderDashboard;\n","export const ColumnTask = {};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  overflow-x: scroll;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 8px;\n\n  user-select: none;\n\n  ::-webkit-scrollbar {\n    height: 12px;\n    width: calc(100% - 24px);\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: ${props => props.theme.column.scrollTrack};\n    border: 1px solid ${props => props.theme.column.scrollBorder};\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${props => props.theme.column.scrollThumb};\n  }\n\n  @media screen and (min-width: 768px) {\n    overflow-x: ${props => (props.length < 2 ? 'hidden' : 'scroll')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    overflow-x: ${props => (props.length < 3 ? 'hidden' : 'scroll')};\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 34px;\n`;\n","import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 24px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n`;\n\nexport const LabelInput = styled.label`\n  width: 100%;\n`;\n\nexport const TitleInput = styled(Field)`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const AuthFormSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  padding: 14px;\n  border: none;\n  background: ${props => props.theme.modal.buttonBackground};\n  border-radius: 8px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.modal.buttonText};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport const ButtonPlus = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n\nexport const ErrorSection = styled(ErrorMessage)`\n  padding-left: 14px;\n  color: #c04d4d;\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\n\nimport {\n  FormWrapper,\n  Section,\n  AuthFormSubmitButton,\n  PlusIcon,\n  TitleInput,\n  SectionTitle,\n  ModalForm,\n  ErrorSection,\n  ButtonPlus,\n} from '../ColumnModal.styled';\nimport sprite from '../../../../images/sprite.svg';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from '../../../../redux/dashboards/dashboardsOperations.js';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from '../../../../redux/dashboards/dashboardsSelectors.js';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\nconst initialValues = {\n  title: '',\n};\n\nconst AddColumnModal = ({ dashboardId, closeModal }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title } = values;\n\n    const alreadyExists = columns.findIndex(item => {\n      const name = item.title.toLowerCase();\n      const newName = title.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExists >= 0) {\n      return `${columns.name} is already added to contact list`;\n    } else {\n    }\n\n    dispatch(\n      addColumn({\n        dashboardId,\n        title,\n      })\n    );\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Add column</SectionTitle>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <ModalForm>\n          <FormWrapper>\n            <ErrorSection name=\"title\" component=\"div\" />\n            <TitleInput\n              type=\"text \"\n              id=\"text\"\n              name=\"title\"\n              placeholder=\"Title \"\n            />\n          </FormWrapper>\n\n          <AuthFormSubmitButton type=\"submit\">\n            <ButtonPlus>\n              <PlusIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlusIcon>\n            </ButtonPlus>\n            Add\n          </AuthFormSubmitButton>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default AddColumnModal;\n","import React, { useState, useRef } from 'react';\nimport AddButton from 'components/Boards/AddButton/AddButton';\nimport { ColumnTask } from 'components/Boards/ColumnTask/ColumnTask';\nimport { ContentWrapper, Wrapper } from './MainDashboard.styled';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal';\nimport AddColumnModal from 'components/Modals/ColumnModal/AddColumnModal';\nimport { useSelector } from 'react-redux';\nimport {\n  selectColumns,\n  selectColumnsLength,\n  selectCurrentDashboard,\n} from '../../../redux/dashboards/dashboardsSelectors.js';\n\nconst MainDashboard = () => {\n  const columnLength = useSelector(selectColumnsLength);\n  const currentDashboard = useSelector(selectCurrentDashboard);\n  const columns = useSelector(selectColumns);\n\n  const [open, setOpen] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const scrollRef = useRef(null);\n  const [startX, setStartX] = useState(0);\n\n  const handleOpen = () => {\n    setOpen(true);\n    setIsDragging(false);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n    setIsDragging(true);\n  };\n\n  const handleMouseDown = e => {\n    if (e.button === 0) {\n      const target = e.target.tagName.toLowerCase();\n      if (target !== 'input' && target !== 'textarea') {\n        setIsDragging(true);\n        setStartX(e.pageX - scrollRef.current.offsetLeft);\n      }\n    }\n  };\n\n  const handleMouseMove = e => {\n    if (!isDragging || open) return;\n    const x = e.pageX - scrollRef.current.offsetLeft;\n    const walk = (x - startX) * 0.05;\n    scrollRef.current.scrollLeft = scrollRef.current.scrollLeft - walk;\n  };\n\n  const handleMouseUp = e => {\n    if (e.button === 0) {\n      setIsDragging(false);\n    }\n  };\n\n  return (\n    <Wrapper length={columnLength} ref={scrollRef}>\n      <ContentWrapper\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        {columns &&\n          columns.map(item => <ColumnTask key={item._id} item={item} />)}\n\n        <AddButton openModal={handleOpen} />\n      </ContentWrapper>\n\n      <BasicModal\n        open={open}\n        closeModal={handleCloseModal}\n        children={\n          <AddColumnModal\n            dashboardId={currentDashboard?._id}\n            closeModal={handleCloseModal}\n          />\n        }\n      />\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ScreensPage.styled';\nimport { selectIsMenuOpen } from '../../redux/menuMode/menuModeSelectors.js';\nimport { closeMenuMode } from '../../redux/menuMode/menuModeSlice.js';\n\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard.js';\nimport MainDashboard from './MainDashboard/MainDashboard.js';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentBg = useSelector(state => state?.dashboards?.currentBg);\n  const currentName = useSelector(state => state?.dashboards?.currentName);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleScreenClick} bgcUrl={currentBg} isOpen={menuMode}>\n      <HeaderDashboard children={currentName} />\n\n      <MainDashboard />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","bgcUrl","isOpen","button","Text","span","_templateObject2","theme","themePopup","textMain","Icon","svg","_templateObject3","icon","Section","SectionTitle","h2","modal","FormWrapper","line","FormTitle","h3","_templateObject4","BgWrapper","_templateObject5","BgItem","_templateObject6","iconDefault","CustomRadioBtn","_templateObject7","url","backgroundSecondary","DefaultRadioBtn","Field","_templateObject8","ShowAllLabel","p","_templateObject9","textSecondary","RadioBtnWrapper","_templateObject10","Label","label","_templateObject11","value","LabelItem","_templateObject12","LabetlText","_templateObject13","_templateObject14","ModalForm","Form","_templateObject15","options","FiltersModal","dispatch","useDispatch","currentDashboard","useSelector","selectCurrentDashboard","selectedBg","setSelectedBg","useState","selectedLabel","setSelectedLabel","initialValues","bg","handleBgSelection","el","_jsxs","children","_jsx","Formik","data","map","idx","onClick","onMouseDown","updatedData","backgroundURL","editDashbord","dashboardId","_id","changeBgUrl","className","type","name","selectPriority","handleLabelSelection","concat","toUpperCase","slice","Filter","open","setOpen","handleClose","_Fragment","handleOpen","href","sprite","BasicModal","closeModal","Header","Title","header","userName","_ref","ColumnTask","column","scrollTrack","scrollBorder","scrollThumb","length","ContentWrapper","TitleInput","backgroundMain","buttonBackground","AuthFormSubmitButton","buttonText","ButtonPlus","plusBackground","PlusIcon","plusColor","ErrorSection","ErrorMessage","validationSchema","Yup","shape","title","required","columns","selectColumns","onSubmit","handleSubmit","values","_ref2","resetForm","findIndex","item","toLowerCase","addColumn","component","id","placeholder","MainDashboard","columnLength","selectColumnsLength","isDragging","setIsDragging","scrollRef","useRef","startX","setStartX","handleCloseModal","ref","e","target","tagName","pageX","current","offsetLeft","onMouseMove","walk","scrollLeft","onMouseUp","AddButton","openModal","AddColumnModal","ScreensPage","menuMode","selectIsMenuOpen","currentBg","state","_state$dashboards","dashboards","currentName","_state$dashboards2","handleScreenClick","closeMenuMode","HeaderDashboard"],"sourceRoot":""}