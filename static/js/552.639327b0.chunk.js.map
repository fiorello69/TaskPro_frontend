{"version":3,"file":"static/js/552.639327b0.chunk.js","mappings":"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","sources":["components/ScreensPage/ScreensPage.styled.js","components/ScreensPage/Filter/Filter.styled.js","components/Modals/FiltersModal/FiltersModal.styled.js","components/Modals/FiltersModal/FiltersModal.js","components/ScreensPage/Filter/Filter.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreensPage/HeaderDashboard/HeaderDashboard.js","components/ScreensPage/MainDashboard/MainDashboard.styled.js","components/ScreensPage/MainDashboard/BoardModals.styled.js","components/ScreensPage/MainDashboard/BoardModals.jsx","components/ScreensPage/MainDashboard/Card.styled.js","components/ScreensPage/MainDashboard/Card.jsx","components/ScreensPage/MainDashboard/Column.styled.js","components/ScreensPage/MainDashboard/Columns.jsx","components/ScreensPage/MainDashboard/Boardm.styled.js","components/ScreensPage/MainDashboard/Boardm.jsx","components/ScreensPage/MainDashboard/MainDashboard.js","components/ScreensPage/ScreensPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: start;\n\n  height: calc(100vh - 60px);\n\n  background-image: url(${props => props.$bgcUrl});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n\n  padding: 14px 20px 0 20px;\n\n  margin-left: ${props => (props.$isOpen ? '225px' : '0')};\n  opacity: ${props => (props.$isOpen ? '0.6' : '1')};\n  transition: all 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    height: calc(100vh - 68px);\n    padding: 26px 32px 0 32px;\n\n    margin-left: ${props => (props.$isOpen ? '260px' : '0')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 10px 24px 0 24px;\n    margin-left: 260px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  position: relative;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  outline: none;\n`;\n\nexport const Text = styled.span`\n  font-family: Poppins;\n  color: ${props => props.theme.themePopup.textMain};\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\n\nexport const Icon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${props => props.theme.themePopup.icon};\n  transition: all 250ms linear;\n  fill: transparent;\n\n  ${props => props.$isOpen && 'transform: rotate(-180deg)'};\n`;\n","import styled from 'styled-components';\n\nimport { Form, Field } from 'formik';\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n`;\n\nexport const SectionTitle = styled.h2`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 18px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 14px;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n\n  margin-bottom: 24px;\n\n  &:first-of-type {\n    padding-top: 14px;\n    padding-bottom: 14px;\n    border-top: 1px solid ${props => props.theme.modal.line};\n    border-bottom: 1px solid ${props => props.theme.modal.line};\n  }\n\n  &:last-of-type {\n    position: relative;\n    margin-bottom: 0;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  color: ${props => props.theme.modal.textMain};\n  font-size: 14px;\n  font-family: 'Poppins';\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  margin-bottom: 14px;\n`;\n\nexport const BgWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 252px;\n  gap: 4px;\n`;\n\nexport const BgItem = styled.div`\n  border-radius: 8px;\n  border: none;\n  outline: none;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.iconDefault};\n  background-position: center;\n  background-size: contain;\n\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const CustomRadioBtn = styled.div`\n  border-radius: 8px;\n  width: 28px;\n  height: 28px;\n\n  background-image: url(${props => props.url});\n  background-position: center;\n  background-size: cover;\n\n  cursor: pointer;\n  background-color: ${props => props.theme.modal.backgroundSecondary};\n  transition: all 250ms linear;\n\n  &.active {\n    scale: 1.1;\n  }\n`;\n\nexport const DefaultRadioBtn = styled(Field)`\n  appearance: none;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const ShowAllLabel = styled.p`\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  cursor: pointer;\n\n  position: absolute;\n  top: 2px;\n  right: 0;\n`;\n\nexport const RadioBtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  gap: 12px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 16px;\n  height: 14px;\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  &.active {\n    border: ${props =>\n      props.value === 'without' && '2px solid rgb(128, 128, 128)'};\n    border: ${props =>\n      props.value === 'low' && '2px solid rgba(143, 161, 208, 1)'};\n    border: ${props =>\n      props.value === 'medium' && '2px solid rgba(224, 156, 181, 1)'};\n    border: ${props =>\n      props.value === 'high' && '2px solid rgba(190, 219, 176, 1)'};\n  }\n`;\n\nexport const LabelItem = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  background-color: ${props =>\n    props.value === 'without' && 'rgb(128, 128, 128)'};\n  background-color: ${props =>\n    props.value === 'low' && 'rgba(143, 161, 208, 1)'};\n  background-color: ${props =>\n    props.value === 'medium' && 'rgba(224, 156, 181, 1)'};\n  background-color: ${props =>\n    props.value === 'high' && 'rgba(190, 219, 176, 1)'};\n\n  transition: all 250ms linear;\n\n  &.active {\n    width: 6px;\n    height: 6px;\n  }\n`;\n\nexport const LabetlText = styled.p`\n  display: block;\n  width: 100%;\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: Poppins;\n  letter-spacing: -0.24px;\n\n  &.active {\n    color: ${props => props.theme.modal.textMain};\n  }\n\n  cursor: pointer;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ModalForm = styled(Form)`\n  margin: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { useState } from 'react';\nimport {\n  SectionTitle,\n  FormWrapper,\n  Section,\n  DefaultRadioBtn,\n  FormTitle,\n  RadioBtnWrapper,\n  Label,\n  LabelItem,\n  BgItem,\n  CustomRadioBtn,\n  BgWrapper,\n  ShowAllLabel,\n  LabetlText,\n  Wrapper,\n  ModalForm,\n} from './FiltersModal.styled';\n\nimport data from '../background.json';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { selectPriority } from '../../../redux/dashboards/dashboardsSlice';\nimport { editDashbord } from '../../../redux/dashboards/dashboardsOperations';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentDashboard } from '../../../redux/dashboards/dashboardsSelectors';\n\nconst options = ['without', 'low', 'medium', 'high'];\n\nconst FiltersModal = () => {\n  const dispatch = useDispatch();\n\n  const currentDashboard = useSelector(selectCurrentDashboard);\n\n  const [selectedBg, setSelectedBg] = useState('');\n  const [selectedLabel, setSelectedLabel] = useState('');\n\n  const initialValues = {\n    bg: selectedBg,\n    label: selectedLabel,\n  };\n\n  const handleLabelSelection = el => {\n    setSelectedLabel(el);\n  };\n\n  const changeBgUrl = el => {\n    const updatedData = { backgroundURL: el };\n    dispatch(\n      editDashbord({\n        dashboardId: currentDashboard._id,\n        updatedData,\n      })\n    );\n  };\n\n  const handleBgSelection = el => {\n    setSelectedBg(el);\n  };\n\n  return (\n    <Section>\n      <SectionTitle>Filters</SectionTitle>\n\n      <Formik initialValues={initialValues}>\n        <ModalForm>\n          <FormWrapper>\n            <FormTitle>Backgraunds </FormTitle>\n\n            <BgWrapper>\n              {data.map((el, idx) => (\n                <div key={idx}>\n                  <BgItem\n                    onClick={() => handleBgSelection(el.url)}\n                    onMouseDown={() => changeBgUrl(el.url)}\n                    className={selectedBg === el.url ? 'active' : ''}\n                  >\n                    {el.url !== '' && (\n                      <CustomRadioBtn\n                        url={el.url}\n                        onClick={() => handleBgSelection(el.url)}\n                        className={selectedBg === el.url ? 'active' : ''}\n                      />\n                    )}\n                  </BgItem>\n\n                  <DefaultRadioBtn type=\"radio\" value={el.url} name=\"bg\" />\n                </div>\n              ))}\n            </BgWrapper>\n          </FormWrapper>\n\n          <FormWrapper>\n            <FormTitle>Label color</FormTitle>\n\n            <ShowAllLabel onClick={() => dispatch(selectPriority('show all'))}>\n              Show all\n            </ShowAllLabel>\n\n            <RadioBtnWrapper>\n              {options.map((el, idx) => (\n                <Wrapper\n                  key={idx}\n                  onClick={() => {\n                    handleLabelSelection(el);\n                    dispatch(selectPriority(el));\n                  }}\n                >\n                  <Label\n                    value={el}\n                    className={selectedLabel === el ? 'active' : ''}\n                  >\n                    <LabelItem\n                      value={el}\n                      className={selectedLabel === el ? 'active' : ''}\n                    />\n                    <DefaultRadioBtn type=\"radio\" value={el} name=\"label\" />\n                  </Label>\n\n                  <LabetlText className={selectedLabel === el ? 'active' : ''}>\n                    {el === 'without'\n                      ? `${el[0].toUpperCase() + el.slice(1)} priority`\n                      : el[0].toUpperCase() + el.slice(1)}\n                  </LabetlText>\n                </Wrapper>\n              ))}\n            </RadioBtnWrapper>\n          </FormWrapper>\n        </ModalForm>\n      </Formik>\n    </Section>\n  );\n};\n\nexport default FiltersModal;\n","import { Icon, Text, Wrapper } from './Filter.styled';\nimport sprite from '../../../images/sprite.svg';\nimport BasicModal from 'components/Modals/BasicModal/BasicModal.js';\nimport { useState } from 'react';\nimport FiltersModal from 'components/Modals/FiltersModal/FiltersModal.js';\n\nconst Filter = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Wrapper onClick={handleOpen}>\n        <Icon>\n          <use href={sprite + '#icon-filter'} />\n        </Icon>\n\n        <Text>Filters</Text>\n      </Wrapper>\n      <BasicModal\n        name=\"Filters\"\n        open={open}\n        closeModal={handleClose}\n        children={<FiltersModal closeModal={handleClose} />}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h2`\n  color: ${props => props.theme.header.userName};\n  font-size: 20px;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n","import Filter from '../Filter/Filter.js';\nimport { Header, Title } from './HeaderDashboard.styled';\n\nconst HeaderDashboard = ({ children }) => {\n  return (\n    <Header>\n      <Title>{children}</Title>\n\n      <Filter />\n    </Header>\n  );\n};\n\nexport default HeaderDashboard;\n","\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n\n  overflow-x: auto;\n  width: 100%;\n  height: 90%;\n  margin-bottom: 8px;\n\n  user-select: none;\n\n  @media screen and (min-width: 768px) {\n    overflow-x: ${props => (props.$length < 2 ? 'hidden' : 'scroll')};\n  }\n\n  @media screen and (min-width: 1280px) {\n    overflow-x: ${props => (props.$length < 3 ? 'hidden' : 'scroll')};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ModalsOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const ModalM = styled.div`\n  &.modal {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1000;\n    background: ${props => props.theme.modal.backgroundMain};\n    color: #ffff;\n    border: 1px solid ${props => props.theme.modal.border};\n    border-radius: 8px;\n    padding: 24px;\n    width: 335px;\n\n    @media screen and (min-width: 768px) {\n      width: 350px;\n    }\n    &.modalAddColumn {\n      height: 221px;\n    }\n\n    &.modalAddCard {\n      height: 522px;\n    }\n  }\n`;\nexport const CloseModalBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  stroke: ${props => props.theme.modal.iconClose};\n  background: none;\n  border: none;\n  font-size: 24px;\n  color: ${props => props.theme.modal.iconClose};\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  transition: all 250ms linear;\n\n  &:hover {\n    opacity: 0.8;\n    scale: 1.2;\n  }\n`;\nexport const ModalTitle = styled.p`\n  font-family: 'Poppins';\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.36px;\n  text-align: left;\n  margin-bottom: 10px;\n  color: ${props => props.theme.modal.textMain};\n`;\nexport const TitleInput = styled.input`\n  width: 100%;\n  height: 49px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  resize: none;\n  width: 100%;\n  height: 154px;\n  padding: 14px 18px;\n\n  font-size: 14px;\n  font-family: 'Poppins';\n  letter-spacing: -0.28px;\n\n  margin-top: 14px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n\n  background-color: ${props => props.theme.modal.backgroundMain};\n  border: 1px solid ${props => props.theme.modal.buttonBackground};\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  outline: none;\n  border-radius: 8px;\n\n  color: ${props => props.theme.modal.textMain};\n  transition: all 250ms ease;\n  opacity: 0.4;\n\n  &::placeholder {\n    color: ${props => props.theme.modal.textMain};\n    font-size: 14px;\n    font-family: 'Poppins';\n    letter-spacing: -0.28px;\n  }\n\n  &:focus {\n    opacity: 1;\n  }\n`;\n\nexport const Dline = styled.div`\n  margin-top: 12px;\n  font-size: 12px;\n  //   color: #ffffff80;\n  color: ${props => props.theme.modal.buttonBackground};\n  width: 127px;\n  label {\n    display: block;\n  }\n\n  input {\n    width: 100%;\n    margin-top: 5px;\n    background-color: transparent;\n    border: none;\n    border-radius: 4px;\n    color: #bedbb0;\n  }\n`;\n\nexport const DotDiv = styled.div`\n  margin-top: 24px;\n  font-size: 12px;\n  label {\n    display: block;\n  }\n  div {\n    display: flex;\n    gap: 8px;\n    margin-top: 5px;\n  }\n`;\n\nexport const Label = styled.label`\n  color: ${props => props.theme.modal.textSecondary};\n  font-size: 12px;\n  font-family: 'Poppins';\n  font-weight: 400;\n  letter-spacing: -0.24px;\n`;\n\nexport const Dot = styled.span`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  cursor: pointer;\n  &.blue {\n    background-color: #8fa1d0;\n  }\n  &.pink {\n    background-color: #e09cb5;\n  }\n  &.green {\n    background-color: #bedbb0;\n  }\n  &.black {\n    background-color: rgb(102, 98, 98);\n  }\n  &.selected {\n    border: 3px solid darkgray;\n    scale: 1.2;\n  }\n`;\n\nexport const ModalSubmitButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: ${props => props.$margintop || '40px'};\n  padding: 14px;\n  width: 100%;\n  height: 49px;\n  border: none;\n  background: ${props => props.theme.modal.buttonBackground};\n  border-radius: 10px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.modal.buttonText};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nexport const PlusButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.modal.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\nexport const PlsIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.modal.plusColor};\n`;\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectColumns } from '../../../redux/dashboards/dashboardsSelectors.js';\nimport {\n  addCard,\n  addColumn,\n  editCard,\n  editColumn,\n} from '../../../redux/dashboards/dashboardsOperations.js';\nimport {\n  CloseModalBtn,\n  Dline,\n  Dot,\n  DotDiv,\n  Label,\n  ModalM,\n  ModalsOverlay,\n  ModalSubmitButton,\n  ModalTitle,\n  PlsIcon,\n  PlusButton,\n  TextArea,\n  TitleInput,\n} from './BoardModals.styled';\nimport sprite from '../../../images/sprite.svg';\n\n// ModalAddColumn Component\nconst ModalAddColumn = ({ dashboardId, onClose }) => {\n  const [columnTitle, setColumnTitle] = useState('');\n  const dispatch = useDispatch();\n  // eslint-disable-next-line\n  const columns = useSelector(selectColumns);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    const handleClickOutside = e => {\n      if (e.target.classList.contains('modals-overlay')) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [onClose]);\n\n  const handleAddColumn = () => {\n    dispatch(addColumn({ dashboardId, title: columnTitle }));\n    onClose();\n  };\n\n  return ReactDOM.createPortal(\n    <ModalsOverlay>\n      <ModalM className=\"modal modalAddColumn\">\n        <CloseModalBtn className=\"modal-close-btn\" onClick={onClose}>\n          &times;\n        </CloseModalBtn>\n        <ModalTitle>Add column</ModalTitle>\n        <TitleInput\n          type=\"text\"\n          placeholder=\"Title\"\n          value={columnTitle}\n          onChange={e => setColumnTitle(e.target.value)}\n        />\n        <ModalSubmitButton type=\"button\" onClick={handleAddColumn}>\n          <PlusButton>\n            <PlsIcon>\n              <use href={sprite + '#icon-plus'} />\n            </PlsIcon>\n          </PlusButton>\n          Add\n        </ModalSubmitButton>\n      </ModalM>\n    </ModalsOverlay>,\n    document.getElementById('modal-root-addColumn')\n  );\n};\n\n// ModalEditColumn Component\nconst ModalEditColumn = ({ title, columnId, onClose }) => {\n  const [columnTitle, setColumnTitle] = useState(title);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    const handleClickOutside = e => {\n      if (e.target.classList.contains('modals-overlay')) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [onClose]);\n\n  const handleEditColumn = () => {\n    dispatch(editColumn({ columnId, title: columnTitle }));\n    onClose();\n  };\n\n  return ReactDOM.createPortal(\n    <ModalsOverlay>\n      <ModalM className=\"modal modalEditColumn\">\n        <CloseModalBtn className=\"modal-close-btn\" onClick={onClose}>\n          &times;\n        </CloseModalBtn>\n        <ModalTitle>Edit column</ModalTitle>\n        <TitleInput\n          type=\"text\"\n          placeholder=\"Title\"\n          value={columnTitle}\n          onChange={e => setColumnTitle(e.target.value)}\n        />\n        <ModalSubmitButton type=\"button\" onClick={handleEditColumn}>\n          <PlusButton>\n            <PlsIcon>\n              <use href={sprite + '#icon-plus'} />\n            </PlsIcon>\n          </PlusButton>\n          Edit\n        </ModalSubmitButton>\n      </ModalM>\n    </ModalsOverlay>,\n    document.getElementById('modal-root-addColumn')\n  );\n};\n\n// ModalAddCard Component\nconst ModalAddCard = ({ columnId, onClose }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [labelColor, setLabelColor] = useState('');\n  const [deadline, setDeadline] = useState(\n    new Date().toISOString().substr(0, 10)\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    const handleClickOutside = e => {\n      if (e.target.classList.contains('modals-overlay')) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [onClose]);\n\n  const handleAddCard = () => {\n    let priority;\n    switch (labelColor) {\n      case 'blue':\n        priority = 'high';\n        break;\n      case 'pink':\n        priority = 'medium';\n        break;\n      case 'green':\n        priority = 'low';\n        break;\n      default:\n        priority = 'without';\n    }\n\n    dispatch(\n      addCard({\n        columnId,\n        title,\n        description,\n        priority,\n        deadline: new Date(deadline),\n      })\n    );\n    onClose();\n  };\n\n  return ReactDOM.createPortal(\n    <ModalsOverlay>\n      <ModalM className=\"modal modalAddCard\">\n        <CloseModalBtn className=\"modal-close-btn\" onClick={onClose}>\n          &times;\n        </CloseModalBtn>\n        <ModalTitle>Add card</ModalTitle>\n        <TitleInput\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <TextArea\n          placeholder=\"Description\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <DotDiv>\n          <Label>Label color</Label>\n          <div className=\"colors\">\n            <Dot\n              className={`color blue ${\n                labelColor === 'blue' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('blue')}\n            ></Dot>\n            <Dot\n              className={`color pink ${\n                labelColor === 'pink' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('pink')}\n            ></Dot>\n            <Dot\n              className={`color green ${\n                labelColor === 'green' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('green')}\n            ></Dot>\n            <Dot\n              className={`color black ${\n                labelColor === 'black' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('black')}\n            ></Dot>\n          </div>\n        </DotDiv>\n        <Dline>\n          <Label>Deadline</Label>\n          <input\n            type=\"date\"\n            value={deadline}\n            onChange={e => setDeadline(e.target.value)}\n          />\n        </Dline>\n        <ModalSubmitButton type=\"button\" onClick={handleAddCard}>\n          <PlusButton>\n            <PlsIcon>\n              <use href={sprite + '#icon-plus'} />\n            </PlsIcon>\n          </PlusButton>\n          Add\n        </ModalSubmitButton>\n      </ModalM>\n    </ModalsOverlay>,\n    document.getElementById('modal-root-addCard')\n  );\n};\n\n// ModalEditCard Component\nconst ModalEditCard = ({ card, onClose }) => {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(card.title);\n  const [description, setDescription] = useState(card.description);\n  const [labelColor, setLabelColor] = useState(() => {\n    switch (card.priority) {\n      case 'high':\n        return 'blue';\n      case 'medium':\n        return 'pink';\n      case 'low':\n        return 'green';\n      default:\n        return 'black';\n    }\n  });\n  const [deadline, setDeadline] = useState(card.deadline.substr(0, 10));\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    const handleClickOutside = e => {\n      if (e.target.classList.contains('modals-overlay')) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [onClose]);\n\n  const handleModifyCard = () => {\n    let priority;\n    switch (labelColor) {\n      case 'blue':\n        priority = 'high';\n        break;\n      case 'pink':\n        priority = 'medium';\n        break;\n      case 'green':\n        priority = 'low';\n        break;\n      default:\n        priority = 'without';\n    }\n    dispatch(\n      editCard({\n        cardId: card._id,\n        title,\n        description,\n        priority,\n        deadline: new Date(deadline),\n        owner: card.owner,\n      })\n    );\n    onClose();\n  };\n\n  return ReactDOM.createPortal(\n    <ModalsOverlay>\n      <ModalM className=\"modal modalEditCard\">\n        <CloseModalBtn className=\"modal-close-btn\" onClick={onClose}>\n          &times;\n        </CloseModalBtn>\n        <ModalTitle>Edit card</ModalTitle>\n        <TitleInput\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n        />\n        <TextArea\n          placeholder=\"Description\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        />\n        <DotDiv>\n          <Label>Label color</Label>\n          <div className=\"colors\">\n            <Dot\n              className={`color blue ${\n                labelColor === 'blue' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('blue')}\n            ></Dot>\n            <Dot\n              className={`color pink ${\n                labelColor === 'pink' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('pink')}\n            ></Dot>\n            <Dot\n              className={`color green ${\n                labelColor === 'green' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('green')}\n            ></Dot>\n            <Dot\n              className={`color black ${\n                labelColor === 'black' ? 'selected' : ''\n              }`}\n              onClick={() => setLabelColor('black')}\n            ></Dot>\n          </div>\n        </DotDiv>\n        <Dline>\n          <Label>Deadline</Label>\n          <input\n            type=\"date\"\n            value={deadline}\n            onChange={e => setDeadline(e.target.value)}\n          />\n        </Dline>\n        <ModalSubmitButton type=\"button\" onClick={handleModifyCard}>\n          <PlusButton>\n            <PlsIcon>\n              <use href={sprite + '#icon-plus'} />\n            </PlsIcon>\n          </PlusButton>\n          Edit\n        </ModalSubmitButton>\n      </ModalM>\n    </ModalsOverlay>,\n    document.getElementById('modal-root-addCard')\n  );\n};\n\nexport { ModalAddColumn, ModalEditColumn, ModalAddCard, ModalEditCard };\n","import styled from 'styled-components';\n\nexport const CardM = styled.div`\n  display: flex;\n  background: ${props => props.theme.column.backgroundMain};\n  color: ${props => props.theme.column.textMain};\n\n  border-radius: 4px;\n\n  overflow: hidden;\n  position: relative;\n  min-height: 154px;\n  height: 154px;\n\n  .card-priority-bar {\n    width: 7px;\n    border-top-left-radius: 4px;\n    border-bottom-left-radius: 4px;\n  }\n`;\n\nexport const CardContnt = styled.div`\n  flex-grow: 1;\n  padding: 14px 24px;\n  h4 {\n    font-family: 'Poppins';\n    font-size: 14px;\n    line-height: 21px;\n    margin: 0;\n    margin-bottom: 4px;\n    color: ${props => props.theme.column.textMain};\n  }\n\n  .card-description {\n    font-family: 'Poppins';\n    font-size: 12px;\n    line-height: 16px;\n    margin: 0;\n    padding-bottom: 14px;\n    color: ${props => props.theme.column.textSecondary};\n    max-height: 40px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const CardFooter = styled.div`\n  position: absolute;\n  top: 95px;\n  width: 280px;\n  display: flex;\n  justify-content: space-between;\n  border-top: 1px solid ${props => props.theme.column.borderColor};\n  padding-top: 14px;\n\n  .card-info {\n    display: flex;\n    gap: 14px;\n    width: 123px;\n  }\n  .card-priority,\n  .card-deadline {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  .card-footer-text {\n    font-size: 8px;\n    line-height: 12px;\n    color: ${props => props.theme.column.textSecondary};\n  }\n  .card-priority-div {\n    display: flex;\n    gap: 2px;\n  }\n  .card-priority-bullet {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n  }\n  .card-footer-data {\n    font-size: 10px;\n    line-height: 15px;\n    color: ${props => props.theme.column.textMain};\n  }\n  .card-actions {\n    display: flex;\n    align-items: last baseline;\n    gap: 8px;\n  }\n\n  .card-button {\n    background: none;\n    border: none;\n    color: ${props => props.theme.column.icon};\n    cursor: pointer;\n    height: 16px;\n  }\n\n  .card-button:hover {\n    scale: 1.2;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Draggable } from '@hello-pangea/dnd';\nimport { FaPen, FaTrash, FaArrowCircleRight } from 'react-icons/fa';\nimport { ModalEditCard } from './BoardModals';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from '../../../redux/dashboards/dashboardsOperations';\nimport { CardFooter, CardM, CardContnt } from './Card.styled';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from '../../../redux/dashboards/dashboardsSelectors';\nimport { addCard } from '../../../redux/dashboards/dashboardsOperations.js';\n\nconst Card = ({ card, index }) => {\n  const [showModalEditCard, setShowModalEditCard] = useState(false);\n  const columns = useSelector(selectColumns);\n  const dispatch = useDispatch();\n\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'high':\n        return '#8FA1D0';\n      case 'medium':\n        return '#E09CB5';\n      case 'low':\n        return '#BEDBB0';\n      default:\n        return 'rgb(102, 98, 98)';\n    }\n  };\n\n  const changeColumn = () => {\n    const fromColIndex = columns.findIndex(col => col._id === card.owner);\n    const toColIndex = (fromColIndex + 1) % columns.length;\n    const newOwner = columns[toColIndex]._id;\n    dispatch(deleteCard(card._id));\n    dispatch(\n      addCard({\n        columnId: newOwner,\n        title: card.title,\n        description: card.description,\n        priority: card.priority,\n        deadline: card.deadline,\n      })\n    );\n  };\n\n  const deleteKard = () => {\n    dispatch(deleteCard(card._id));\n  };\n\n  return (\n    <Draggable draggableId={card._id} index={index}>\n      {provided => (\n        <CardM\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={{\n            ...provided.draggableProps.style,\n            marginRight: '8px',\n          }}\n        >\n          <div\n            className=\"card-priority-bar\"\n            style={{ backgroundColor: getPriorityColor(card.priority) }}\n          ></div>\n          <CardContnt>\n            <h4 className=\"card-title\">{card.title}</h4>\n            <p className=\"card-description\">{card.description}</p>\n            <CardFooter>\n              <div className=\"card-info\">\n                <div className=\"card-priority\">\n                  <span className=\"card-footer-text\">Priority</span>\n                  <div className=\"card-priority-div\">\n                    <div\n                      className=\"card-priority-bullet\"\n                      style={{\n                        backgroundColor: getPriorityColor(card.priority),\n                      }}\n                    ></div>\n                    <span className=\"card-footer-data\">{card.priority}</span>\n                  </div>\n                </div>\n                <div className=\"card-deadline\">\n                  <span className=\"card-footer-text\">Deadline</span>\n                  <span className=\"card-footer-data\">\n                    {card.deadline.substr(0, 10)}\n                  </span>\n                </div>\n              </div>\n              <div className=\"card-actions\">\n                <button className=\"card-button\" onClick={changeColumn}>\n                  <FaArrowCircleRight />\n                </button>\n                <button\n                  className=\"card-button\"\n                  onClick={() => setShowModalEditCard(true)}\n                >\n                  <FaPen />\n                </button>\n                {showModalEditCard && (\n                  <ModalEditCard\n                    columnId={card.owner}\n                    card={card}\n                    onClose={() => setShowModalEditCard(false)}\n                  />\n                )}\n                <button className=\"card-button\" onClick={deleteKard}>\n                  <FaTrash />\n                </button>\n              </div>\n            </CardFooter>\n          </CardContnt>\n        </CardM>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Pillar = styled.div`\n  width: 334px;\n  display: flex;\n  flex-direction: column;\n  background-color: transparent;\n\n  .column-title {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 20px;\n    margin-bottom: 14px;\n    align-items: center;\n    max-width: 400px;\n    height: 56px;\n    border-radius: 8px;\n    font-family: 'Poppins';\n    font-size: 14px;\n    line-height: 21px;\n    background: ${props => props.theme.column.backgroundMain};\n    color: ${props => props.theme.column.textMain};\n  }\n  .title-icons {\n    display: flex;\n    gap: 8px;\n  }\n  .title-icons > button {\n    cursor: pointer;\n    border: none;\n    color: ${props => props.theme.column.icon};\n    background-color: transparent;\n  }\n  .title-icons > button:hover {\n    scale: 1.2;\n  }\n`;\n","import React, { useState } from 'react';\nimport { Droppable, Draggable } from '@hello-pangea/dnd';\nimport Card from './Card';\nimport { ModalAddCard, ModalEditColumn } from './BoardModals';\nimport { FaPen, FaTrash } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { deleteColumn } from '../../../redux/dashboards/dashboardsOperations';\nimport { Pillar } from './Column.styled';\nimport { ModalSubmitButton, PlsIcon, PlusButton } from './BoardModals.styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst Column = ({ column, index }) => {\n  const [showModalAddCard, setShowModalAddCard] = useState(false);\n  const [showModalEditColumn, setShowModalEditColumn] = useState(false);\n  const dispatch = useDispatch();\n\n  const deleteKolumn = () => {\n    dispatch(deleteColumn(column._id));\n  };\n\n  return (\n    <Draggable draggableId={column._id} index={index}>\n      {provided => (\n        <Pillar\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          style={{\n            ...provided.draggableProps.style,\n            height: '99%',\n          }}\n        >\n          <div className=\"column-title\" {...provided.dragHandleProps}>\n            {column.title}\n            <div className=\"title-icons\" id={column.title}>\n              <button\n                type=\"button\"\n                onClick={() => setShowModalEditColumn(true)}\n              >\n                <FaPen />\n              </button>\n              {showModalEditColumn && (\n                <ModalEditColumn\n                  title={column.title}\n                  columnId={column._id}\n                  onClose={() => setShowModalEditColumn(false)}\n                />\n              )}\n              <button type=\"button\" onClick={deleteKolumn}>\n                <FaTrash />\n              </button>\n            </div>\n          </div>\n          <Droppable droppableId={column._id} type=\"card\">\n            {provided => (\n              <div\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                style={{\n                  overflowY: 'auto',\n                  overflowX: 'hidden',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '8px',\n                  ...(Array.isArray(column.cards) &&\n                    column.cards.$length > 2 && { maxHeight: '456px' }),\n                }}\n              >\n                {Array.isArray(column.cards) &&\n                  column.cards.map((card, index) => (\n                    <Card key={card._id} card={card} index={index} />\n                  ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          <ModalSubmitButton\n            $margintop=\"14px\"\n            onClick={() => setShowModalAddCard(true)}\n          >\n            <PlusButton>\n              <PlsIcon>\n                <use href={sprite + '#icon-plus'} />\n              </PlsIcon>\n            </PlusButton>\n            Add another card\n          </ModalSubmitButton>\n\n          {showModalAddCard && (\n            <ModalAddCard\n              columnId={column._id}\n              onClose={() => setShowModalAddCard(false)}\n            />\n          )}\n        </Pillar>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const ColumnsAndButton = styled.div`\n  display: flex;\n  gap: 18px;\n  // overflow-x: auto;\n`;\nexport const AddColumnButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  width: 334px;\n  height: 56px;\n  border: none;\n  background: ${props => props.theme.addColumnButton.background};\n  border-radius: 10px;\n\n  font-family: 'Poppins';\n  font-size: 14px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.addColumnButton.color};\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\nexport const ButtonPls = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.addColumnButton.plusBackground};\n  margin-right: 8px;\n  padding: 7px;\n`;\nexport const IconPls = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: ${props => props.theme.addColumnButton.plusColor};\n`;\n","import React, { useEffect, useState } from 'react';\nimport { DragDropContext, Droppable } from '@hello-pangea/dnd';\nimport Column from './Columns.jsx';\nimport { ModalAddColumn } from './BoardModals';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectColumns,\n  selectCurrentDashboard,\n} from '../../../redux/dashboards/dashboardsSelectors';\nimport {\n  AddColumnButton,\n  ButtonPls,\n  ColumnsAndButton,\n  IconPls,\n} from './Boardm.styled';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  deleteCard,\n  addCard,\n} from '../../../redux/dashboards/dashboardsOperations';\n\nconst Boardm = () => {\n  const [showModalAddColumn, setShowModalAddColumn] = useState(false);\n  const currentDashboard = useSelector(selectCurrentDashboard);\n  const columns = useSelector(selectColumns);\n  const [bcolumns, setBColumns] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (columns && columns.length > 0) {\n      setBColumns(columns);\n    }\n  }, [columns]);\n\n  const onDragEnd = result => {\n    const { destination, source, type } = result;\n\n    if (!destination) return;\n\n    const startIndex = source.index;\n    const endIndex = destination.index;\n    const sourceId = source.droppableId;\n    const destId = destination.droppableId;\n\n    if (startIndex === endIndex && sourceId === destId) return;\n\n    if (type === 'column') {\n      const columnToMove = bcolumns[startIndex];\n      let buffer = [...bcolumns];\n      buffer.splice(startIndex, 1);\n      buffer.splice(endIndex, 0, columnToMove);\n      setBColumns(buffer);\n      return;\n    }\n\n    if (type === 'card') {\n      const sourceColumn = bcolumns.find(column => column._id === sourceId);\n      const destColumn = bcolumns.find(column => column._id === destId);\n      const cardToMove = sourceColumn.cards[startIndex];\n\n      dispatch(deleteCard(cardToMove._id));\n\n      dispatch(\n        addCard({\n          columnId: destColumn._id,\n          title: cardToMove.title,\n          description: cardToMove.description,\n          priority: cardToMove.priority,\n          deadline: cardToMove.deadline,\n        })\n      );\n\n      return;\n    }\n  };\n\n  return (\n    <ColumnsAndButton>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable\n          droppableId=\"all-columns\"\n          id=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              style={{ display: 'flex', gap: '18px' }}\n            >\n              {Array.isArray(bcolumns) &&\n                bcolumns.length > 0 &&\n                bcolumns.map((kolumn, index) => {\n                  return (\n                    <Column key={kolumn._id} column={kolumn} index={index} />\n                  );\n                })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n\n      <AddColumnButton onClick={() => setShowModalAddColumn(true)}>\n        <ButtonPls>\n          <IconPls>\n            <use href={sprite + '#icon-plus'} />\n          </IconPls>\n        </ButtonPls>\n        Add another column\n      </AddColumnButton>\n\n      {showModalAddColumn && (\n        <ModalAddColumn\n          dashboardId={currentDashboard?._id}\n          onClose={() => setShowModalAddColumn(false)}\n        />\n      )}\n    </ColumnsAndButton>\n  );\n};\n\nexport default Boardm;\n","import React, { useRef } from 'react';\nimport { Wrapper } from './MainDashboard.styled';\nimport { useSelector } from 'react-redux';\nimport { selectColumnsLength } from '../../../redux/dashboards/dashboardsSelectors.js';\nimport Boardm from './Boardm';\n\nconst MainDashboard = () => {\n  const columnLength = useSelector(selectColumnsLength);\n\n  const scrollRef = useRef(null);\n\n  return (\n    <Wrapper $length={columnLength} ref={scrollRef}>\n      <Boardm />\n    </Wrapper>\n  );\n};\n\nexport default MainDashboard;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ScreensPage.styled';\nimport { selectIsMenuOpen } from '../../redux/menuMode/menuModeSelectors.js';\nimport { closeMenuMode } from '../../redux/menuMode/menuModeSlice.js';\n\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard.js';\nimport MainDashboard from './MainDashboard/MainDashboard.js';\n\nconst ScreensPage = () => {\n  const dispatch = useDispatch();\n\n  const menuMode = useSelector(selectIsMenuOpen);\n  const currentBg = useSelector(state => state?.dashboards?.currentBg);\n  const currentName = useSelector(state => state?.dashboards?.currentName);\n\n  const handleScreenClick = () => {\n    if (menuMode) {\n      dispatch(closeMenuMode());\n    }\n  };\n\n  return (\n    <Wrapper onClick={handleScreenClick} $bgcUrl={currentBg} $isOpen={menuMode}>\n      <HeaderDashboard children={currentName} />\n\n      <MainDashboard />\n    </Wrapper>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["Wrapper","styled","div","props","$bgcUrl","$isOpen","button","Text","span","theme","themePopup","textMain","Icon","svg","icon","Section","SectionTitle","h2","modal","FormWrapper","line","FormTitle","h3","BgWrapper","BgItem","iconDefault","CustomRadioBtn","url","backgroundSecondary","DefaultRadioBtn","Field","ShowAllLabel","p","textSecondary","RadioBtnWrapper","Label","label","value","LabelItem","LabetlText","ModalForm","Form","options","FiltersModal","dispatch","useDispatch","currentDashboard","useSelector","selectCurrentDashboard","selectedBg","setSelectedBg","useState","selectedLabel","setSelectedLabel","initialValues","bg","handleBgSelection","el","_jsxs","children","_jsx","Formik","data","map","idx","onClick","onMouseDown","updatedData","backgroundURL","editDashbord","dashboardId","_id","changeBgUrl","className","type","name","selectPriority","handleLabelSelection","toUpperCase","slice","Filter","open","setOpen","handleClose","_Fragment","handleOpen","href","sprite","BasicModal","closeModal","Header","Title","header","userName","_ref","$length","ModalsOverlay","ModalM","backgroundMain","border","CloseModalBtn","iconClose","ModalTitle","TitleInput","input","buttonBackground","TextArea","textarea","Dline","DotDiv","Dot","ModalSubmitButton","$margintop","buttonText","PlusButton","plusBackground","PlsIcon","plusColor","ModalAddColumn","onClose","columnTitle","setColumnTitle","selectColumns","useEffect","handleKeyDown","e","key","handleClickOutside","target","classList","contains","document","addEventListener","removeEventListener","ReactDOM","placeholder","onChange","handleAddColumn","addColumn","title","getElementById","ModalEditColumn","_ref2","columnId","handleEditColumn","editColumn","ModalAddCard","_ref3","setTitle","description","setDescription","labelColor","setLabelColor","deadline","setDeadline","Date","toISOString","substr","handleAddCard","priority","addCard","ModalEditCard","_ref4","card","handleModifyCard","editCard","cardId","owner","CardM","column","CardContnt","CardFooter","borderColor","index","showModalEditCard","setShowModalEditCard","columns","getPriorityColor","changeColumn","toColIndex","findIndex","col","length","newOwner","deleteCard","deleteKard","Draggable","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","style","marginRight","backgroundColor","FaArrowCircleRight","FaPen","FaTrash","Pillar","showModalAddCard","setShowModalAddCard","showModalEditColumn","setShowModalEditColumn","deleteKolumn","deleteColumn","height","id","Droppable","droppableId","droppableProps","overflowY","overflowX","display","flexDirection","gap","Array","isArray","cards","maxHeight","Card","ColumnsAndButton","AddColumnButton","addColumnButton","background","color","ButtonPls","IconPls","Boardm","showModalAddColumn","setShowModalAddColumn","bcolumns","setBColumns","DragDropContext","onDragEnd","result","destination","source","startIndex","endIndex","sourceId","destId","columnToMove","buffer","splice","sourceColumn","find","destColumn","cardToMove","direction","kolumn","Column","MainDashboard","columnLength","selectColumnsLength","scrollRef","useRef","ScreensPage","menuMode","selectIsMenuOpen","currentBg","state","_state$dashboards","dashboards","currentName","_state$dashboards2","handleScreenClick","closeMenuMode","HeaderDashboard"],"sourceRoot":""}